package ${pkg}.${moduleName}.controller;

import java.util.List;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
#if(${enableSwagger})
import io.swagger.annotations.ApiOperation;
import pers.syq.fastadmin.generator.utils.PageUtils;
#end

import ${pkg}.${moduleName}.entity.${className}Entity;
import ${pkg}.${moduleName}.service.${className}Service;
import ${pkg}.common.utils.PageUtils;
import ${pkg}.common.utils.R;



/**
 *
 * @author $!{author}
 * @email $!{email}
 * @date $!{datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

#if(${enableSwagger})
    @ApiOperation(value = "queryPage")
#end
    @GetMapping
    public R<PageUtils> list(@RequestParam Map<String, Object> params){
        PageUtils page = ${classname}Service.queryPage(params);
        return R.ok(page);
    }

#if(${enableSwagger})
    @ApiOperation(value = "getById")
#end
    @GetMapping("/{${pk.attrname}}")
    public R<${className}Entity> getById(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.getById(${pk.attrname});
        return R.ok(${classname});
    }

#if(${enableSwagger})
    @ApiOperation(value = "save")
#end
    @PostMapping
    public R<?> save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});
        return R.ok();
    }

#if(${enableSwagger})
    @ApiOperation(value = "update")
#end
    @PutMapping
    public R<?> update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.updateById(${classname});
        return R.ok();
    }


#if(${enableSwagger})
    @ApiOperation(value = "deleteBatch")
#end
    @DeleteMapping("/batch")
    public R<?> deleteBatch(@RequestBody List<${pk.attrType}> ${pk.attrname}s){
		${classname}Service.removeByIds(${pk.attrname}s);
        return R.ok();
    }

#if(${enableSwagger})
    @ApiOperation(value = "deleteById")
#end
    @DeleteMapping("/{${pk.attrname}}")
    public R<?> deleteById(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
        ${classname}Service.removeById(${pk.attrname});
        return R.ok();
    }
}
