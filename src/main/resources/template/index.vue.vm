<template>
  <div>
    <el-form :inline="true" :model="dataForm" @keyup.enter.native="getDataList()">
      <el-form-item>
        <el-input v-model="dataForm.key" placeholder="Key" clearable></el-input>
      </el-form-item>
      <el-form-item>
        <el-button @click="getDataList()">Search</el-button>
        <el-button v-if="isAuth('${moduleName}:${pathName}:save')" type="primary" @click="addOrUpdateHandle()">#if(${language} == 0)新增#elseif(${language} == 1)追加#elseif(${language} == 2)Add#end</el-button>
        <el-button v-if="isAuth('${moduleName}:${pathName}:delete')" type="danger" @click="deleteHandle()" :disabled="dataListSelections.length <= 0">#if(${language} == 0)批量删除#elseif(${language} == 1)一括削除#elseif(${language} == 2)Batch delete#end</el-button>
      </el-form-item>
    </el-form>
    <el-table
      :data="dataList"
      border
      v-loading="dataListLoading"
      @selection-change="selectionChangeHandle"
      style="width: 100%;">
      <el-table-column
        type="selection"
        header-align="center"
        align="center"
        width="50">
      </el-table-column>
#foreach($column in $columns)
      <el-table-column
        prop="${column.attrname}"
        header-align="center"
        align="center"
        label="#if(!${column.comment} || $column.comment.equals(""))${column.attrname}#else${column.comment}#end">
      </el-table-column>
#end
      <el-table-column
        fixed="right"
        header-align="center"
        align="center"
        width="150"
        label="#if(${language} == 0 || ${language} == 1)操作#elseif(${language} == 2)Operation#end">
        <template #default="scope">
          <el-button type="text" size="small" v-if="isAuth('${moduleName}:${pathName}:update')" @click="addOrUpdateHandle(scope.row.${pk.attrname})">}#if(${language} == 0)修改#elseif(${language} == 1)変更#elseif(${language} == 2)Update#end</el-button>
          <el-button type="text" size="small" v-if="isAuth('${moduleName}:${pathName}:delete')" @click="deleteHandle(scope.row.${pk.attrname})">#if(${language} == 0)删除#elseif(${language} == 1)削除#elseif(${language} == 2)Delete#end</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </el-pagination>
    <!-- 弹窗, 新增 / 修改 -->
    <add-or-update v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"></add-or-update>
  </div>
</template>

<script>
import { isAuth } from '@/utils/auth'
import AddOrUpdate from './${frontPathName}-save-or-update'
import { page${className}s,delete${className}s } from '@/api/${moduleName}/${frontPathName}'
export default {
  data () {
    return {
      dataForm: {
        key: ''
      },
      dataList: [],
      pageIndex: 1,
      pageSize: 10,
      totalPage: 0,
      dataListLoading: false,
      dataListSelections: [],
      addOrUpdateVisible: false
    }
  },
  components: {
    AddOrUpdate
  },
  created () {
    this.getDataList()
  },
  methods: {
    getDataList () {
      if(isAuth('${moduleName}:${pathName}:page')){
        this.dataListLoading = true
        page${className}s({
          'page': this.pageIndex,
          'size': this.pageSize,
          'key': this.dataForm.key
        }).then(response => {
          this.dataList = response.data.list
          this.totalPage = response.data.totalCount
          this.dataListLoading = false
        }).catch(() => {
          this.dataList = []
          this.totalPage = 0
          this.dataListLoading = false
        })
      }else {
        #[[this.$message.error(]]#
#if(${language} == 0)
          "你没有执行这个操作的权限。"
#elseif(${language} == 1)
          "この操作をする権限がありません。"
#elseif(${language} == 2)
          "You don't have required permission to perform this action."
#end
        );
      }
    },
    sizeChangeHandle (val) {
      this.pageSize = val
      this.pageIndex = 1
      this.getDataList()
    },
    // Current page
    currentChangeHandle (val) {
      this.pageIndex = val
      this.getDataList()
    },
    // Multiple select
    selectionChangeHandle (val) {
      this.dataListSelections = val
    },
    // Save / Update
    addOrUpdateHandle (id) {
      this.addOrUpdateVisible = true
      #[[this.$nextTick(() => {]]#
        this.$refs.addOrUpdate.init(id)
      })
    },
    // Delete
    deleteHandle (id) {
      let ids = id ? [id] : this.dataListSelections.map(item => {
        return item.${pk.attrname}
      })
#if(${language} == 0)
      #[[this.$confirm(`确定对[id=${ids.join(',')}]进行[${id ? '删除' : '批量删除'}]操作?`, '提示', {]]#
        confirmButtonText: '确定',
        cancelButtonText: '取消',
#elseif(${language} == 1)
      #[[this.$confirm(`[id=${ids.join(',')}]を削除しますか?`, '削除', {]]#
        confirmButtonText: '確認',
        cancelButtonText: 'キャンセル',
#elseif(${language} == 2)
      #[[this.$confirm(`Do you want to delete [id=${ids.join(',')}]?`, 'Delete', {]]#
        confirmButtonText: 'Yes',
        cancelButtonText: 'No',
#end
        type: 'warning'
      }).then(() => {
        delete${className}s(ids).then(() => {
          #[[this.$message({]]#
            message: 'Success',
            type: 'success',
            duration: 1000,
            onClose: () => {
              this.getDataList()
            }
          })
        }).catch(() => {});
      }).catch(() => {});
    },
    isAuth
  }
}
</script>
